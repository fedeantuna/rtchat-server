name: RTChat Workflow

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AZURE_WEBAPP_NAME: rtchat-server
  AZURE_WEBAPP_PACKAGE_PATH: '.'
  DOTNET_VERSION: '5.0.x'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build --no-restore

    - name: Run tests
      run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory:"./.coverage/" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format="lcov"

    - name: Recover Coverage Report
      run: |
        mkdir ./coverage
        cp ./.coverage/**/coverage.info ./coverage/

    - name: Publish Coverage Report to coveralls.io
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: ./coverage/coverage.info

    - name: .NET Publish
      run: dotnet publish -c Release -o '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/rtchat'

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: rtchat-server-artifact
        path: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/rtchat'

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: rtchat-server-artifact
        path: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/rtchat'
    
    - name: Deploy to Azure Web Apps
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/rtchat'
